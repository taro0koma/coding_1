/* ------------------------------------------------------------------------ */

/* ⬇︎ Googleフォントを必要なものだけ読み込みます・・https://fonts.google.com/?subset=japanese */

@import url("https://fonts.googleapis.com/css2?family=Kiwi+Maru:wght@300;500&display=swap");

/* ------------------------------------------------------------------------ */

/* ⬇︎ bodyタグ(webページ全体のデザイン) のスタイル */

body {
  /* bodyタグにはデフォルトで8pxの余白があるので余白を消します */
  margin: 0;
  /* webページ全体のフォント色を指定します。（別のスタイルでフォント色を設定しなければ統一されます） */
  color: #532c2c;
  /* デフォルトは12pxなので少し大きくします */
  font-size: 14px;
  /* フォントの太さを細くすると繊細な雰囲気になります */
  font-weight: 300;
  /* あらかじめ Googleフォントで読み込んだフォントをひとつ目に指定します */
  font-family: "Kiwi Maru", serif;
  /* テキストの行間を設定します。「100%」がテキストの高さと同じという意味を示します(行と行の間の余白が0) */
  /* 行間を広くするとおだやかな印象になります */
  line-height: 200%;
}

/* ------------------------------------------------------------------------ */

/* ⬇︎ 一番外側の要素の設定。記事を横並びにまとめる設定にします */
.wrapper {
  /* displayの設定値を「flex」にすると、デフォルトで設定されていた不要な余白などをリセットできます */
  display: flex;
  /* 要素の「内側」に余白をつけます。padding-bottomの時は下辺に余白をつけます */
  padding-bottom: 24px;
  /* [背景の詳細設定] 背景に使う色を設定します */
  background: #f9fafb;
}

/* ------------------------------------------------------------------------ */

/* ⬇︎ 外側から２番目の要素の設定。立体感のあるデザインにします */

.outer {
  /* 外側の要素のサイズと同じ幅にしたくない時に、ヨコ幅(width) のサイズ調整をします */
  width: 90%;
  /* 要素の「外側」に余白をつけます。margin: に２つの数値を書くと「上下」「左右」の余白の指定ができます */
  /* （今回の場合「左右」がauto。autoは自動調整という意味なので中央寄せにできます */
  margin: 32px auto;
  /* 要素の「内側」に余白をつけます。topとbottomをまとめて書くことも可能です・・padding: 24px 0 80px; */
  padding-top: 24px;
  padding-bottom: 80px;
  background: #f9fafb;
  /* 要素の背後に分身 → 影を作ります。カンマ区切りで複数の設定ができます */
  /* ひとかたまりごとに [ヨコ方向にずらす距離　タテ方向にずらす距離 ぼかす距離 色設定] */
  box-shadow: -8px -8px 4px #ffffff, 8px 8px 4px #cfd8e3;
  /* 要素の枠を角丸にします。数値は角丸の円半径を示すので大きくするほど角丸の丸みが大きくなります */
  border-radius: 26px;
}

/* ------------------------------------------------------------------------ */

/* ⬇︎ 内部のブロックの共通設定クラス */

.box {
  width: 80%;
  margin: 16px auto;
  padding-top: 32px;
  /* 内部の要素の寄せる位置を指定します。centerは中央寄せです。 */
  text-align: center;
}

/* ------------------------------------------------------------------------ */

/* 区切り線 <hr>  タグの設定 */
/* 今回は<hr>を1回しか使っていないですが、個別に変えたい時はクラス名で管理します */

hr {
  width: 160px;
  border: 2px solid #7e5959;
}

/* ------------------------------------------------------------------------ */

/* 柔軟に並べる(flex)機能を活かしたエリアの設定。記事を横並びにまとめる設定にします */
/* 画面サイズが広いと横並びになり、狭いと下に並びます */

.flex-area {
  /* displayの設定値を「flex」にすると、内部の記事の並び方が設定できるようになります */
  display: flex;
  /* [flexの詳細設定] 画面が狭い時に内部の記事を折り返させます */
  flex-wrap: wrap;
  /* [flexの詳細設定] 内部の記事を並べる向きを設定します。rowはヨコ並び */
  flex-direction: row;
  /* [flexの詳細設定] 内部の記事を並べる位置を設定します。centerは中央寄せ */
  justify-content: center;
}

/* ------------------------------------------------------------------------ */

/* flexエリア内の要素の共通設定 */
/* .flex-area > div  ・・「 ◯◯ > XX 」の形式で指定先をつなげると「 ◯◯の内部にあるXX全て 」同じ設定にできます */

.flex-area > div {
  padding: 24px 16px;
  /* [flexの詳細設定] flexエリア内の要素のヨコ幅を設定します */
  flex-basis: 320px;
  background: #e2e4eb;
  /* エリア内にある要素が中央寄せになると引っ付いてしまうので、余白(外側)をつけます */
  margin: 2px;
}

/* ------------------------------------------------------------------------ */

/* 数字順のない箇条書き(ul)機能を活かしたエリアの設定。 */
/* 数字順のある箇条書きは<ol>タグを使います */

ul {
  /* ulを囲むエリアの設定スタイルを引き継いでしまうので、ul内を 中央寄せ から 左寄せに上書きする */
  text-align: left;
  /* 外側の余白(margin)の値をマイナスにすると要素サイズより外方向に配置することができる */
  margin-left: -8px;
}

/* 箇条書きの項目それぞれの要素のタグを設定します(<ul>なら文頭に点がつきます) */
/* 箇条書きの項目それぞれの間に余白を入れたいので、下側に余白をとります */
li {
  margin-bottom: 16px;
}

/* ------------------------------------------------------------------------ */

/* 営業時間を表示するTableタグの個別設定クラス */

.info {
  /* Tableのセルとセルの間の余白をつけない設定 */
  /* （セルに枠線を付けたとき隣同士に隙間ができないようにできる） */
  border-collapse: collapse;
  margin: 40px auto;
}

/* 異なるタグをカンマ区切りで並べることで、共通スタイルを設定します */

.info th, .info td {
  /* padding や margin の設定値を２つ書くと、「上下」「左右」２種類の余白を設定できます */
  padding: 10px 20px;
  text-align: center;
  /* borderは枠線の設定です。border-bottomでは下線の設定をします */
  /* 設定値を３つ書くと、「線の太さ」「線のタイプ(solidは直線)」「線の色」を設定できます */
  border-bottom: 1px solid #8b7575;
}